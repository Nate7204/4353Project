function cov_2wfii2wwm(){var path="C:\\Users\\Eric\\webAppClone\\4353Project\\api\\server.js";var hash="8f46aa6854abefb4f4dd5689742abee576eb80bd";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\Eric\\webAppClone\\4353Project\\api\\server.js",statementMap:{"0":{start:{line:1,column:16},end:{line:1,column:34}},"1":{start:{line:2,column:19},end:{line:2,column:41}},"2":{start:{line:3,column:13},end:{line:3,column:28}},"3":{start:{line:4,column:19},end:{line:4,column:50}},"4":{start:{line:5,column:14},end:{line:5,column:30}},"5":{start:{line:7,column:12},end:{line:7,column:21}},"6":{start:{line:9,column:18},end:{line:11,column:1}},"7":{start:{line:13,column:0},end:{line:13,column:16}},"8":{start:{line:16,column:0},end:{line:16,column:27}},"9":{start:{line:19,column:0},end:{line:19,column:51}},"10":{start:{line:20,column:0},end:{line:20,column:24}},"11":{start:{line:23,column:13},end:{line:23,column:37}},"12":{start:{line:24,column:0},end:{line:26,column:3}},"13":{start:{line:25,column:2},end:{line:25,column:52}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:24,column:17},end:{line:24,column:18}},loc:{start:{line:24,column:23},end:{line:26,column:1}},line:24}},branchMap:{"0":{loc:{start:{line:23,column:13},end:{line:23,column:37}},type:"binary-expr",locations:[{start:{line:23,column:13},end:{line:23,column:29}},{start:{line:23,column:33},end:{line:23,column:37}}],line:23}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},f:{"0":0},b:{"0":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"8f46aa6854abefb4f4dd5689742abee576eb80bd"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2wfii2wwm=function(){return actualCoverage;};}return actualCoverage;}cov_2wfii2wwm();const express=(cov_2wfii2wwm().s[0]++,require("express"));const bodyParser=(cov_2wfii2wwm().s[1]++,require("body-parser"));const cors=(cov_2wfii2wwm().s[2]++,require("cors"));const authroutes=(cov_2wfii2wwm().s[3]++,require("./routes/auth.routes"));const mysql=(cov_2wfii2wwm().s[4]++,require('mysql'));const app=(cov_2wfii2wwm().s[5]++,express());var corsOptions=(cov_2wfii2wwm().s[6]++,{origin:"http://localhost:8081"});cov_2wfii2wwm().s[7]++;app.use(cors());// parse requests of content-type - application/json
cov_2wfii2wwm().s[8]++;app.use(bodyParser.json());// parse requests of content-type - application/x-www-form-urlencoded
cov_2wfii2wwm().s[9]++;app.use(bodyParser.urlencoded({extended:true}));cov_2wfii2wwm().s[10]++;app.use("/",authroutes);// set port, listen for requests
const PORT=(cov_2wfii2wwm().s[11]++,(cov_2wfii2wwm().b[0][0]++,process.env.PORT)||(cov_2wfii2wwm().b[0][1]++,8080));cov_2wfii2wwm().s[12]++;app.listen(PORT,()=>{cov_2wfii2wwm().f[0]++;cov_2wfii2wwm().s[13]++;console.log(`Server is running on port ${PORT}.`);});/* UNCOMMENT THIS TO TEST QUERYS ON SERVER STARTUP
let pool = mysql.createPool({
        connectionLimit: 10,
        host: '99.77.89.225',
        user: 'root',
        password: '',
        database: 'fuel'
})

let temp = "username2"

let str = "SELECT username, password FROM profile WHERE username = '" + temp + "'"

pool.getConnection(function(err, connection) {
  if(err){
    return console.error('error:' + err.message)
  }
 connection.query(str, function(err, result, fields){
   connection.release()
    if (err) throw err;
    console.log(result);
  })

  console.log('Connected to database')
})
*/
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsImJvZHlQYXJzZXIiLCJjb3JzIiwiYXV0aHJvdXRlcyIsIm15c3FsIiwiYXBwIiwiY29yc09wdGlvbnMiLCJvcmlnaW4iLCJ1c2UiLCJqc29uIiwidXJsZW5jb2RlZCIsImV4dGVuZGVkIiwiUE9SVCIsInByb2Nlc3MiLCJlbnYiLCJsaXN0ZW4iLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoia3lEQWVZO3lGQWZaLEtBQU1BLENBQUFBLE9BQU8seUJBQUdDLE9BQU8sQ0FBQyxTQUFELENBQVYsQ0FBYixDQUNBLEtBQU1DLENBQUFBLFVBQVUseUJBQUdELE9BQU8sQ0FBQyxhQUFELENBQVYsQ0FBaEIsQ0FDQSxLQUFNRSxDQUFBQSxJQUFJLHlCQUFHRixPQUFPLENBQUMsTUFBRCxDQUFWLENBQVYsQ0FDQSxLQUFNRyxDQUFBQSxVQUFVLHlCQUFHSCxPQUFPLENBQUMsc0JBQUQsQ0FBVixDQUFoQixDQUNBLEtBQU1JLENBQUFBLEtBQUsseUJBQUdKLE9BQU8sQ0FBQyxPQUFELENBQVYsQ0FBWCxDQUVBLEtBQU1LLENBQUFBLEdBQUcseUJBQUdOLE9BQU8sRUFBVixDQUFULENBRUEsR0FBSU8sQ0FBQUEsV0FBVyx5QkFBRyxDQUNoQkMsTUFBTSxDQUFFLHVCQURRLENBQUgsQ0FBZixDLHVCQUlBRixHQUFHLENBQUNHLEdBQUosQ0FBUU4sSUFBSSxFQUFaLEVBRUE7dUJBQ0FHLEdBQUcsQ0FBQ0csR0FBSixDQUFRUCxVQUFVLENBQUNRLElBQVgsRUFBUixFQUVBO3VCQUNBSixHQUFHLENBQUNHLEdBQUosQ0FBUVAsVUFBVSxDQUFDUyxVQUFYLENBQXNCLENBQUVDLFFBQVEsQ0FBRSxJQUFaLENBQXRCLENBQVIsRSx3QkFDQU4sR0FBRyxDQUFDRyxHQUFKLENBQVEsR0FBUixDQUFhTCxVQUFiLEVBRUE7QUFDQSxLQUFNUyxDQUFBQSxJQUFJLDBCQUFHLDJCQUFBQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUYsSUFBWiw4QkFBb0IsSUFBcEIsQ0FBSCxDQUFWLEMsd0JBQ0FQLEdBQUcsQ0FBQ1UsTUFBSixDQUFXSCxJQUFYLENBQWlCLElBQU0sZ0RBQ3JCSSxPQUFPLENBQUNDLEdBQVIsQ0FBYSw2QkFBNEJMLElBQUssR0FBOUMsRUFDRCxDQUZELEVBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKFwiZXhwcmVzc1wiKTtcclxuY29uc3QgYm9keVBhcnNlciA9IHJlcXVpcmUoXCJib2R5LXBhcnNlclwiKTtcclxuY29uc3QgY29ycyA9IHJlcXVpcmUoXCJjb3JzXCIpO1xyXG5jb25zdCBhdXRocm91dGVzID0gcmVxdWlyZShcIi4vcm91dGVzL2F1dGgucm91dGVzXCIpXHJcbmNvbnN0IG15c3FsID0gcmVxdWlyZSgnbXlzcWwnKVxyXG5cclxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xyXG5cclxudmFyIGNvcnNPcHRpb25zID0ge1xyXG4gIG9yaWdpbjogXCJodHRwOi8vbG9jYWxob3N0OjgwODFcIlxyXG59O1xyXG5cclxuYXBwLnVzZShjb3JzKCkpO1xyXG5cclxuLy8gcGFyc2UgcmVxdWVzdHMgb2YgY29udGVudC10eXBlIC0gYXBwbGljYXRpb24vanNvblxyXG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKTtcclxuXHJcbi8vIHBhcnNlIHJlcXVlc3RzIG9mIGNvbnRlbnQtdHlwZSAtIGFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZFxyXG5hcHAudXNlKGJvZHlQYXJzZXIudXJsZW5jb2RlZCh7IGV4dGVuZGVkOiB0cnVlIH0pKTtcclxuYXBwLnVzZShcIi9cIiwgYXV0aHJvdXRlcylcclxuXHJcbi8vIHNldCBwb3J0LCBsaXN0ZW4gZm9yIHJlcXVlc3RzXHJcbmNvbnN0IFBPUlQgPSBwcm9jZXNzLmVudi5QT1JUIHx8IDgwODA7XHJcbmFwcC5saXN0ZW4oUE9SVCwgKCkgPT4ge1xyXG4gIGNvbnNvbGUubG9nKGBTZXJ2ZXIgaXMgcnVubmluZyBvbiBwb3J0ICR7UE9SVH0uYCk7XHJcbn0pO1xyXG5cclxuLyogVU5DT01NRU5UIFRISVMgVE8gVEVTVCBRVUVSWVMgT04gU0VSVkVSIFNUQVJUVVBcclxubGV0IHBvb2wgPSBteXNxbC5jcmVhdGVQb29sKHtcclxuICAgICAgICBjb25uZWN0aW9uTGltaXQ6IDEwLFxyXG4gICAgICAgIGhvc3Q6ICc5OS43Ny44OS4yMjUnLFxyXG4gICAgICAgIHVzZXI6ICdyb290JyxcclxuICAgICAgICBwYXNzd29yZDogJycsXHJcbiAgICAgICAgZGF0YWJhc2U6ICdmdWVsJ1xyXG59KVxyXG5cclxubGV0IHRlbXAgPSBcInVzZXJuYW1lMlwiXHJcblxyXG5sZXQgc3RyID0gXCJTRUxFQ1QgdXNlcm5hbWUsIHBhc3N3b3JkIEZST00gcHJvZmlsZSBXSEVSRSB1c2VybmFtZSA9ICdcIiArIHRlbXAgKyBcIidcIlxyXG5cclxucG9vbC5nZXRDb25uZWN0aW9uKGZ1bmN0aW9uKGVyciwgY29ubmVjdGlvbikge1xyXG4gIGlmKGVycil7XHJcbiAgICByZXR1cm4gY29uc29sZS5lcnJvcignZXJyb3I6JyArIGVyci5tZXNzYWdlKVxyXG4gIH1cclxuIGNvbm5lY3Rpb24ucXVlcnkoc3RyLCBmdW5jdGlvbihlcnIsIHJlc3VsdCwgZmllbGRzKXtcclxuICAgY29ubmVjdGlvbi5yZWxlYXNlKClcclxuICAgIGlmIChlcnIpIHRocm93IGVycjtcclxuICAgIGNvbnNvbGUubG9nKHJlc3VsdCk7XHJcbiAgfSlcclxuXHJcbiAgY29uc29sZS5sb2coJ0Nvbm5lY3RlZCB0byBkYXRhYmFzZScpXHJcbn0pXHJcbiovXHJcbiJdfQ==