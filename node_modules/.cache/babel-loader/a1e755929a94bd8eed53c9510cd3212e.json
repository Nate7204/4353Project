{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eric\\\\webAppClone\\\\4353Project\\\\src\\\\Containers\\\\History.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport NavBar from \"./NavBar\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction getHistory() {\n  var username = JSON.parse(localStorage.getItem(\"user\")).username;\n  return axios.post(\"http://localhost:8080/api/auth/getHistory\", {\n    username\n  }).then(response => {\n    localStorage.setItem(\"formData\", JSON.stringify(response.data.data));\n    return response.data;\n  });\n}\n\nexport default function History() {\n  _s();\n\n  var [values, setValues] = useState([]);\n  var [gallons, setGallons] = useState([]);\n  var [address, setAddress] = useState([]);\n  var [dates, dates] = useState([]);\n  var prices;\n  var amountDues;\n  useEffect(() => {\n    const afunct = async () => {\n      getHistory().then(() => {\n        setValues(values => JSON.parse(localStorage.getItem(\"formData\")));\n        var gallons1 = values.map(index => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: index.gallons\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this));\n        var address1 = values.map(index => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: index.address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this));\n        var dates1 = values.map(index => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: index.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this));\n        var prices1 = values.map(index => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: index.price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this));\n        var amountDues1 = values.map(index => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: index.due\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this));\n        setGallons(gallons1);\n      }, error => {\n        const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n        alert(error.response.data.resMessage);\n      });\n    };\n\n    afunct();\n  }, []);\n  if (gallons) alert(JSON.stringify(gallons)); //values.map() basically transforms values\n  //in this case for every element in values, it returns a <tr> with index.Gallons inside the <tr>\n  //so basically gallons is an array of <tr> \n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Login\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), !gallons && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"No history yet!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Gallons\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Delivery Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Price per gallon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Amount Due\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: gallons\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: dates\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: prices\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: amountDues\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n\n_s(History, \"QquukneErfQ79BSYlAmh0cLonE8=\");\n\n_c = History;\n\nvar _c;\n\n$RefreshReg$(_c, \"History\");","map":{"version":3,"sources":["C:/Users/Eric/webAppClone/4353Project/src/Containers/History.js"],"names":["React","useState","useEffect","NavBar","axios","getHistory","username","JSON","parse","localStorage","getItem","post","then","response","setItem","stringify","data","History","values","setValues","gallons","setGallons","address","setAddress","dates","prices","amountDues","afunct","gallons1","map","index","address1","dates1","date","prices1","price","amountDues1","due","error","resMessage","message","toString","alert"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\"\r\nimport NavBar from \"./NavBar\"\r\nimport axios from \"axios\"\r\n\r\n\r\nfunction getHistory(){\r\n    var username = JSON.parse(localStorage.getItem(\"user\")).username\r\n    return axios\r\n        .post(\"http://localhost:8080/api/auth/getHistory\", {\r\n            username     \r\n        })\r\n        .then(response => {\r\n                localStorage.setItem(\"formData\", JSON.stringify(response.data.data))\r\n            return response.data\r\n        })\r\n}\r\n\r\nexport default function History(){\r\n    var [values, setValues] = useState([])\r\n    var [gallons, setGallons] = useState([]);\r\n    var [address, setAddress] = useState([]);\r\n    var [dates, dates] = useState([]);\r\n    var prices;\r\n    var amountDues;\r\n\r\n    useEffect(() => {\r\n        const afunct = async() =>{\r\n            getHistory().then(\r\n                () => { \r\n                    setValues(values => JSON.parse(localStorage.getItem(\"formData\")))\r\n                    var gallons1 = values.map((index) =>(\r\n                        <tr>{index.gallons}</tr>\r\n                    ))\r\n                    var address1 = values.map((index) =>(\r\n                        <tr>{index.address}</tr>\r\n                    ))\r\n                    var dates1 = values.map((index) =>(\r\n                        <tr>{index.date}</tr>\r\n                    ))\r\n                    var prices1 = values.map((index) =>(\r\n                        <tr>{index.price}</tr>\r\n                    ))\r\n                    var amountDues1 = values.map((index) =>(\r\n                        <tr>{index.due}</tr>\r\n                    ))\r\n                    setGallons(gallons1)\r\n                },\r\n                error => {\r\n\r\n                    const resMessage = (\r\n                        error.response &&\r\n                        error.response.data &&\r\n                        error.response.data.message) ||\r\n                        error.message ||\r\n                        error.toString()\r\n\r\n                    alert(error.response.data.resMessage)\r\n            })\r\n        }\r\n        afunct();\r\n    },[]);\r\n\r\n    if(gallons)\r\n        alert(JSON.stringify(gallons))\r\n\r\n    //values.map() basically transforms values\r\n    //in this case for every element in values, it returns a <tr> with index.Gallons inside the <tr>\r\n    //so basically gallons is an array of <tr> \r\n    return(\r\n        <div className=\"Login\">\r\n            <NavBar />\r\n            {!gallons && <h2>No history yet!</h2>}\r\n            <table>\r\n                    <tbody>\r\n                    <tr>\r\n                        <td>Gallons</td>\r\n                        <td>Address</td>\r\n                        <td>Delivery Date</td>\r\n                        <td>Price per gallon</td>\r\n                        <td>Amount Due</td>\r\n                    </tr>\r\n                    <td>{gallons}</td>\r\n                    <td>{address}</td>\r\n                    <td>{dates}</td>\r\n                    <td>{prices}</td>\r\n                    <td>{amountDues}</td>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}