{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eric\\\\webAppClone\\\\4353Project\\\\src\\\\Containers\\\\History.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport NavBar from \"./NavBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction getHistory(gallons, address, date, suggested, total, username) {\n  return axios.post(\"http://localhost:8080/api/auth/fuelQuote\", {\n    gallons,\n    address,\n    date,\n    suggested,\n    total,\n    username\n  });\n}\n\nexport default function History() {\n  _s();\n\n  var [values, setValues] = useState([]);\n  /*values are hard coded for now but will add functionality later(get data from api/database)\r\n  //not 100% sure what useEffect does, it just prevents this page from having infinite re-render loop when setValues() is called\r\n  //since setValues() updates the values state which makes the page rerender\r\n  */\n\n  useEffect(() => {\n    const addRow = async () => {\n      setValues(values => [{\n        Gallons: 1,\n        Address: 'Road rd',\n        Date: 'Tomorrow',\n        Price: 24,\n        Due: 24\n      }, {\n        Gallons: 2,\n        Address: 'Street rd',\n        Date: 'Yesterday',\n        Price: 10,\n        Due: 20\n      }]);\n    };\n\n    addRow();\n  }, []); //values.map() basically transforms values\n  //in this case for every element in values, it returns a <tr> with index.Gallons inside the <tr>\n  //so basically gallons is an array of <tr> \n\n  var gallons = values.map(index => /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: index.Gallons\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this));\n  var address = values.map(index => /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: index.Address\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this));\n  var dates = values.map(index => /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: index.Date\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this));\n  var prices = values.map(index => /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: index.Price\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this));\n  var amountDues = values.map(index => /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: index.Due\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Login\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Gallons\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Delivery Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Price per gallon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Amount Due\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: gallons\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: dates\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: prices\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: amountDues\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n\n_s(History, \"v436fEfQmiRbYObwkf4GshYa39M=\");\n\n_c = History;\n\nvar _c;\n\n$RefreshReg$(_c, \"History\");","map":{"version":3,"sources":["C:/Users/Eric/webAppClone/4353Project/src/Containers/History.js"],"names":["React","useState","useEffect","NavBar","getHistory","gallons","address","date","suggested","total","username","axios","post","History","values","setValues","addRow","Gallons","Address","Date","Price","Due","map","index","dates","prices","amountDues"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\"\r\nimport NavBar from \"./NavBar\"\r\n\r\nfunction getHistory(gallons, address, date, suggested, total, username) {\r\n    return axios.post(\"http://localhost:8080/api/auth/fuelQuote\", {\r\n        gallons, address, date, suggested, total, username\r\n    });\r\n}\r\n\r\nexport default function History(){\r\n    var [values, setValues] = useState([])\r\n\r\n    /*values are hard coded for now but will add functionality later(get data from api/database)\r\n    //not 100% sure what useEffect does, it just prevents this page from having infinite re-render loop when setValues() is called\r\n    //since setValues() updates the values state which makes the page rerender\r\n    */\r\n    useEffect(() => {   \r\n        const addRow = async () =>{\r\n            setValues(values => [{\r\n                Gallons: 1,\r\n                Address: 'Road rd',\r\n                Date: 'Tomorrow',\r\n                Price: 24,\r\n                Due: 24,\r\n            },\r\n            {\r\n                Gallons: 2,\r\n                Address: 'Street rd',\r\n                Date: 'Yesterday',\r\n                Price: 10,\r\n                Due: 20,\r\n            }]);\r\n        }\r\n\r\n        addRow()\r\n    }, [])\r\n\r\n    //values.map() basically transforms values\r\n    //in this case for every element in values, it returns a <tr> with index.Gallons inside the <tr>\r\n    //so basically gallons is an array of <tr> \r\n    var gallons = values.map((index) =>(\r\n        <tr>{index.Gallons}</tr>\r\n    ))\r\n    var address = values.map((index) =>(\r\n        <tr>{index.Address}</tr>\r\n    ))\r\n    var dates = values.map((index) =>(\r\n        <tr>{index.Date}</tr>\r\n    ))\r\n    var prices = values.map((index) =>(\r\n        <tr>{index.Price}</tr>\r\n    ))\r\n    var amountDues = values.map((index) =>(\r\n        <tr>{index.Due}</tr>\r\n    ))\r\n\r\n    return(\r\n        <div className=\"Login\">\r\n            <NavBar />\r\n            <table>\r\n                    <tbody>\r\n                    <tr>\r\n                        <td>Gallons</td>\r\n                        <td>Address</td>\r\n                        <td>Delivery Date</td>\r\n                        <td>Price per gallon</td>\r\n                        <td>Amount Due</td>\r\n                    </tr>\r\n                    <td>{gallons}</td>\r\n                    <td>{address}</td>\r\n                    <td>{dates}</td>\r\n                    <td>{prices}</td>\r\n                    <td>{amountDues}</td>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}