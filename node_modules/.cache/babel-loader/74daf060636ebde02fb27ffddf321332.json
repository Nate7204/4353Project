{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eric\\\\webAppClone\\\\4353Project\\\\src\\\\Containers\\\\Fuel.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { useHistory } from \"react-router-dom\";\nimport NavBar from \"./NavBar\";\nimport axios from \"axios\";\nimport './Fuel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PricingModule {}\n\nfunction fuelQuote(gallons, address, date, suggested, total, username) {\n  return axios.post(\"http://localhost:8080/api/auth/fuelQuote\", {\n    gallons,\n    address,\n    date,\n    suggested,\n    total,\n    username\n  });\n}\n\nfunction getAddress() {\n  var username = JSON.parse(localStorage.getItem(\"user\")).username;\n  return axios.post(\"http://localhost:8080/api/auth/getAddress\", {\n    username\n  }).then(response => {\n    localStorage.setItem(\"address\", JSON.stringify(response.data));\n    return response.data;\n  });\n}\n\nexport default function Fuel() {\n  _s();\n\n  const [gallons, setGallons] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  var suggested = 0;\n  var total = 0;\n  var history = useHistory();\n  var username = JSON.parse(localStorage.getItem('user')).username;\n  getAddres().then(() => {}, error => {\n    const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    alert(error.response.data.resMessage);\n  });\n  const addy = JSON.parse(localStorage.getItem('address')).address;\n\n  function handleSubmit(event) {\n    fuelQuote(gallons, addy, date, suggested, total, username);\n    alert(\"Quote Made\");\n    history.push(\"/History\");\n  }\n\n  function isNumber(n) {\n    return /^-?[\\d.]+(?:e-?\\d+)?$/.test(n);\n  }\n\n  function isValidDate(dateString) {\n    // First check for the pattern\n    if (!/^\\d{1,2}\\/\\d{1,2}\\/\\d{4}$/.test(dateString)) return false; // Parse the date parts to integers\n\n    var parts = dateString.split(\"/\");\n    var day = parseInt(parts[1], 10);\n    var month = parseInt(parts[0], 10);\n    var year = parseInt(parts[2], 10); // Check the ranges of month and year\n\n    if (year < 1000 || year > 3000 || month == 0 || month > 12) return false;\n    var monthLength = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]; // Adjust for leap years\n\n    if (year % 400 == 0 || year % 100 != 0 && year % 4 == 0) monthLength[1] = 29; // Check the range of the day\n\n    return day > 0 && day <= monthLength[month - 1];\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Fuel\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Quote Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        size: \"lg\",\n        controlId: \"gallons\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Gallons\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          autoFocus: true,\n          value: gallons,\n          onChange: e => setGallons(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your Address: \", addy]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Delivery Address: \", addy]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        size: \"lg\",\n        controlId: \"date\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Date (mm/dd/yyyy)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          autoFocus: true,\n          value: date,\n          onChange: e => setDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Suggested Price: NaN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Total Due: Nan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"quote\",\n        block: true,\n        size: \"lg\",\n        type: \"submit\",\n        disabled: !isNumber(gallons) || !isValidDate(date),\n        children: \"Get Quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Fuel, \"h9uvKA/W2fpou/znqLq4CnWw5yk=\", false, function () {\n  return [useHistory];\n});\n\n_c = Fuel;\n\nvar _c;\n\n$RefreshReg$(_c, \"Fuel\");","map":{"version":3,"sources":["C:/Users/Eric/webAppClone/4353Project/src/Containers/Fuel.js"],"names":["React","useState","Form","Button","useHistory","NavBar","axios","PricingModule","fuelQuote","gallons","address","date","suggested","total","username","post","getAddress","JSON","parse","localStorage","getItem","then","response","setItem","stringify","data","Fuel","setGallons","setDate","history","getAddres","error","resMessage","message","toString","alert","addy","handleSubmit","event","push","isNumber","n","test","isValidDate","dateString","parts","split","day","parseInt","month","year","monthLength","e","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\"\r\nimport Form from \"react-bootstrap/Form\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport NavBar from \"./NavBar\"\r\nimport axios from \"axios\"\r\nimport './Fuel.css'\r\nclass PricingModule {\r\n    \r\n}\r\nfunction fuelQuote(gallons, address, date, suggested, total, username) {\r\n    return axios.post(\"http://localhost:8080/api/auth/fuelQuote\", {\r\n        gallons, address, date, suggested, total, username\r\n    });\r\n}\r\n\r\nfunction getAddress(){\r\n    var username = JSON.parse(localStorage.getItem(\"user\")).username\r\n    return axios\r\n        .post(\"http://localhost:8080/api/auth/getAddress\", {\r\n            username     \r\n        })\r\n        .then(response => {\r\n                localStorage.setItem(\"address\", JSON.stringify(response.data))\r\n            return response.data\r\n        })\r\n}\r\n\r\nexport default function Fuel(){\r\n    const [gallons, setGallons] = useState(\"\")\r\n    const [date, setDate] = useState(\"\")\r\n    var suggested = 0\r\n    var total = 0\r\n    var history = useHistory();\r\n    var username = JSON.parse(localStorage.getItem('user')).username\r\n\r\n    getAddres().then(\r\n        () => { \r\n            \r\n        },\r\n        error => {\r\n            const resMessage = (\r\n                error.response &&\r\n                error.response.data &&\r\n                error.response.data.message) ||\r\n                error.message ||\r\n                error.toString()\r\n\r\n            alert(error.response.data.resMessage)\r\n    })\r\n\r\n    const addy = JSON.parse(localStorage.getItem('address')).address\r\n\r\n    function handleSubmit(event) {\r\n        fuelQuote(gallons, addy, date, suggested, total, username)\r\n        alert(\"Quote Made\")\r\n        history.push(\"/History\")\r\n    }\r\n    function isNumber(n) { return /^-?[\\d.]+(?:e-?\\d+)?$/.test(n); } \r\n    function isValidDate(dateString) {\r\n        // First check for the pattern\r\n        if (!/^\\d{1,2}\\/\\d{1,2}\\/\\d{4}$/.test(dateString))\r\n            return false;\r\n\r\n        // Parse the date parts to integers\r\n        var parts = dateString.split(\"/\");\r\n        var day = parseInt(parts[1], 10);\r\n        var month = parseInt(parts[0], 10);\r\n        var year = parseInt(parts[2], 10);\r\n\r\n        // Check the ranges of month and year\r\n        if (year < 1000 || year > 3000 || month == 0 || month > 12)\r\n            return false;\r\n\r\n        var monthLength = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n\r\n        // Adjust for leap years\r\n        if (year % 400 == 0 || (year % 100 != 0 && year % 4 == 0))\r\n            monthLength[1] = 29;\r\n\r\n        // Check the range of the day\r\n        return day > 0 && day <= monthLength[month - 1];\r\n    };\r\n        return (\r\n            <div className=\"Fuel\">\r\n                <NavBar/>\r\n                <h1>Quote Page</h1>\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group size=\"lg\" controlId=\"gallons\">\r\n                        <Form.Label>Gallons</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            autoFocus\r\n                            value={gallons}\r\n                            onChange={(e) => setGallons(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n                    <p>Your Address: {addy}</p>\r\n                    <p>Delivery Address: {addy}</p>\r\n                        <Form.Group size=\"lg\" controlId=\"date\">\r\n                            <Form.Label>Date (mm/dd/yyyy)</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                autoFocus\r\n                                value={date}\r\n                                onChange={(e) => setDate(e.target.value)}\r\n                            />\r\n                    </Form.Group>\r\n                    <p>Suggested Price: NaN</p>\r\n                    <p>Total Due: Nan</p>\r\n                    <Button className=\"quote\" block size=\"lg\" type=\"submit\" disabled={!isNumber(gallons) || !isValidDate(date)}>\r\n                        Get Quote\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }"]},"metadata":{},"sourceType":"module"}