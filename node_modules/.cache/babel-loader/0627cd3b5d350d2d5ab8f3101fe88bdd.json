{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nathan\\\\source\\\\repos\\\\Nate7204\\\\4353Project\\\\src\\\\Containers\\\\Fuel.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { useHistory } from \"react-router-dom\";\nimport NavBar from \"./NavBar\";\nimport axios from \"axios\";\nimport './Fuel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PricingModule {}\n\nfunction fuelQuote(gallons, address, date, suggested, total, username) {\n  return axios.post(\"http://localhost:8080/api/auth/fuelQuote\", {\n    gallons,\n    address,\n    date,\n    suggested,\n    total,\n    username\n  });\n}\n\nexport default function Fuel() {\n  _s();\n\n  const [gallons, setGallons] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  var suggested = 0;\n  var total = 0;\n  var history = useHistory();\n  var username = JSON.parse(localStorage.getItem('user')).username;\n  var addy = \"123\";\n\n  function getData() {\n    const mysql = require('mysql');\n\n    let connection = mysql.createConnection({\n      host: '99.77.89.225',\n      user: 'root',\n      password: '',\n      database: 'fuel'\n    });\n    connection.connect(function (err) {\n      if (err) {\n        return console.error('error:' + err.message);\n      }\n\n      connection.query(\"select * from profile WHERE username = 'user'\", function (err, result, fields) {\n        if (err) throw err;\n        console.log(result);\n      });\n      console.log('Connected to database');\n    });\n  }\n\n  function handleSubmit(event) {\n    fuelQuote(gallons, addy, date, suggested, total, username);\n    alert(\"Quote Made\");\n    history.push(\"/History\");\n    window.location.reload();\n  }\n\n  function isNumber(n) {\n    return /^-?[\\d.]+(?:e-?\\d+)?$/.test(n);\n  }\n\n  function isValidDate(dateString) {\n    // First check for the pattern\n    if (!/^\\d{1,2}\\/\\d{1,2}\\/\\d{4}$/.test(dateString)) return false; // Parse the date parts to integers\n\n    var parts = dateString.split(\"/\");\n    var day = parseInt(parts[1], 10);\n    var month = parseInt(parts[0], 10);\n    var year = parseInt(parts[2], 10); // Check the ranges of month and year\n\n    if (year < 1000 || year > 3000 || month == 0 || month > 12) return false;\n    var monthLength = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]; // Adjust for leap years\n\n    if (year % 400 == 0 || year % 100 != 0 && year % 4 == 0) monthLength[1] = 29; // Check the range of the day\n\n    return day > 0 && day <= monthLength[month - 1];\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Fuel\",\n    children: [username, /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Quote Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        size: \"lg\",\n        controlId: \"gallons\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Gallons\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          autoFocus: true,\n          value: gallons,\n          onChange: e => setGallons(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your Address: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Delivery Address: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        size: \"lg\",\n        controlId: \"date\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Date (mm/dd/yyyy)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          autoFocus: true,\n          value: date,\n          onChange: e => setDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Suggested Price: NaN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Total Due: Nan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"quote\",\n        block: true,\n        size: \"lg\",\n        type: \"submit\",\n        disabled: !isNumber(gallons) || !isValidDate(date),\n        children: \"Get Quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Fuel, \"h9uvKA/W2fpou/znqLq4CnWw5yk=\", false, function () {\n  return [useHistory];\n});\n\n_c = Fuel;\n\nvar _c;\n\n$RefreshReg$(_c, \"Fuel\");","map":{"version":3,"sources":["C:/Users/Nathan/source/repos/Nate7204/4353Project/src/Containers/Fuel.js"],"names":["React","useState","Form","Button","useHistory","NavBar","axios","PricingModule","fuelQuote","gallons","address","date","suggested","total","username","post","Fuel","setGallons","setDate","history","JSON","parse","localStorage","getItem","addy","getData","mysql","require","connection","createConnection","host","user","password","database","connect","err","console","error","message","query","result","fields","log","handleSubmit","event","alert","push","window","location","reload","isNumber","n","test","isValidDate","dateString","parts","split","day","parseInt","month","year","monthLength","e","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\"\r\nimport Form from \"react-bootstrap/Form\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport NavBar from \"./NavBar\"\r\nimport axios from \"axios\"\r\nimport './Fuel.css'\r\nclass PricingModule {\r\n    \r\n}\r\nfunction fuelQuote(gallons, address, date, suggested, total, username) {\r\n    return axios.post(\"http://localhost:8080/api/auth/fuelQuote\", {\r\n        gallons, address, date, suggested, total, username\r\n    });\r\n}\r\n\r\nexport default function Fuel(){\r\n    const [gallons, setGallons] = useState(\"\")\r\n    const [date, setDate] = useState(\"\")\r\n    var suggested = 0\r\n    var total = 0\r\n    var history = useHistory();\r\n    var username = JSON.parse(localStorage.getItem('user')).username\r\n    var addy = \"123\"\r\n    function getData() {\r\n        const mysql = require('mysql')\r\n\r\n        let connection = mysql.createConnection({\r\n            host: '99.77.89.225',\r\n            user: 'root',\r\n            password: '',\r\n            database: 'fuel'\r\n        })\r\n\r\n        connection.connect(function (err) {\r\n            if (err) {\r\n                return console.error('error:' + err.message)\r\n            }\r\n            connection.query(\"select * from profile WHERE username = 'user'\", function (err, result, fields) {\r\n                if (err) throw err;\r\n                console.log(result);\r\n            })\r\n\r\n            console.log('Connected to database')\r\n        })\r\n    }\r\n    function handleSubmit(event) {\r\n        fuelQuote(gallons, addy, date, suggested, total, username)\r\n        alert(\"Quote Made\")\r\n        history.push(\"/History\")\r\n        window.location.reload();\r\n    }\r\n    function isNumber(n) { return /^-?[\\d.]+(?:e-?\\d+)?$/.test(n); } \r\n    function isValidDate(dateString) {\r\n        // First check for the pattern\r\n        if (!/^\\d{1,2}\\/\\d{1,2}\\/\\d{4}$/.test(dateString))\r\n            return false;\r\n\r\n        // Parse the date parts to integers\r\n        var parts = dateString.split(\"/\");\r\n        var day = parseInt(parts[1], 10);\r\n        var month = parseInt(parts[0], 10);\r\n        var year = parseInt(parts[2], 10);\r\n\r\n        // Check the ranges of month and year\r\n        if (year < 1000 || year > 3000 || month == 0 || month > 12)\r\n            return false;\r\n\r\n        var monthLength = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n\r\n        // Adjust for leap years\r\n        if (year % 400 == 0 || (year % 100 != 0 && year % 4 == 0))\r\n            monthLength[1] = 29;\r\n\r\n        // Check the range of the day\r\n        return day > 0 && day <= monthLength[month - 1];\r\n    };\r\n    return (\r\n        <div className=\"Fuel\">\r\n            {username}\r\n            <NavBar/>\r\n            <h1>Quote Page</h1>\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Group size=\"lg\" controlId=\"gallons\">\r\n                    <Form.Label>Gallons</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        autoFocus\r\n                        value={gallons}\r\n                        onChange={(e) => setGallons(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n                <p>Your Address: </p>\r\n                <p>Delivery Address: </p>\r\n                    <Form.Group size=\"lg\" controlId=\"date\">\r\n                        <Form.Label>Date (mm/dd/yyyy)</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            autoFocus\r\n                            value={date}\r\n                            onChange={(e) => setDate(e.target.value)}\r\n                        />\r\n                </Form.Group>\r\n                <p>Suggested Price: NaN</p>\r\n                <p>Total Due: Nan</p>\r\n                <Button className=\"quote\" block size=\"lg\" type=\"submit\" disabled={!isNumber(gallons) || !isValidDate(date)}>\r\n                    Get Quote\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}