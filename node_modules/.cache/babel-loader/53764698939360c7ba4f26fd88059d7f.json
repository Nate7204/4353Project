{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eric\\\\webAppClone\\\\4353Project\\\\src\\\\Containers\\\\Fuel.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { useHistory } from \"react-router-dom\";\nimport NavBar from \"./NavBar\";\nimport axios from \"axios\";\nimport './Fuel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PricingModule {\n  constructor(data, gallons, hasHistory) {\n    this.data = data;\n    this.gallons = gallons;\n    this.hasHistory = hasHistory;\n  }\n\n  suggested() {\n    var location = this.data.state === 'TX' ? .02 : .04;\n    var historyFactor = this.hasHistory === true ? .1 : 0;\n    var gal = this.gallons >= 1000 ? .02 : .03;\n    return (location - historyFactor + gal + .1) * 1.5;\n  }\n\n}\n\nfunction fuelQuote(gallons, address, date, suggested, total, username) {\n  return axios.post(\"http://localhost:8080/api/auth/fuelQuote\", {\n    gallons,\n    address,\n    date,\n    suggested,\n    total,\n    username\n  });\n}\n\nfunction fuelInfo(username) {\n  return axios.post(\"http://localhost:8080/api/auth/fuelInfo\", {\n    username\n  }).then(response => {\n    localStorage.setItem(\"fuelInfo\", JSON.stringify(response.data.data));\n    return response.data;\n  });\n}\n\nfunction fuelHistory(username) {\n  return axios.post(\"http://localhost:8080/api/auth/gethistory\", {\n    username\n  });\n}\n\nexport default function Fuel() {\n  _s();\n\n  const [gallons, setGallons] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [data, setData] = useState([]);\n  const [hasHistory, setHasHistory] = useState(false);\n  const [suggested, setSuggested] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [loading, setLoading] = useState(true);\n  var history = useHistory();\n  var username = JSON.parse(localStorage.getItem('user')).username;\n  useEffect(() => {\n    setData({\n      addressOne: \"Loading address..\"\n    });\n\n    const afunct = async () => {\n      await fuelInfo(username).then(() => {\n        setData(JSON.parse(localStorage.getItem(\"fuelInfo\")));\n      });\n      await fuelHistory(username).then(response => {\n        if (response.data.data.length !== 0) setHasHistory(true);\n      });\n      setLoading(false);\n    };\n\n    afunct();\n  }, []);\n\n  function handleSubmit(event) {\n    fuelQuote(gallons, data.address, date, suggested, total, username);\n    alert(\"Quote Made\");\n    history.push(\"/History\");\n    window.location.reload();\n  }\n\n  async function getQuote(event) {\n    let temp = new PricingModule(data, gallons, hasHistory).suggested();\n    setSuggested(1.5 + temp);\n    setTotal((gallons * (1.5 + temp)).toFixed(2)); //im not using suggested here bc for some reason it wasnt working\n  }\n\n  function isNumber(n) {\n    return /^-?[\\d.]+(?:e-?\\d+)?$/.test(n);\n  }\n\n  function isValidDate(dateString) {\n    // First check for the pattern\n    if (!/^\\d{1,2}\\/\\d{1,2}\\/\\d{4}$/.test(dateString)) return false; // Parse the date parts to integers\n\n    var parts = dateString.split(\"/\");\n    var day = parseInt(parts[1], 10);\n    var month = parseInt(parts[0], 10);\n    var year = parseInt(parts[2], 10); // Check the ranges of month and year\n\n    if (year < 1000 || year > 3000 || month == 0 || month > 12) return false;\n    var monthLength = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]; // Adjust for leap years\n\n    if (year % 400 == 0 || year % 100 != 0 && year % 4 == 0) monthLength[1] = 29; // Check the range of the day\n\n    return day > 0 && day <= monthLength[month - 1];\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Fuel\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Quote Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        size: \"lg\",\n        controlId: \"gallons\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Gallons\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          autoFocus: true,\n          value: gallons,\n          onChange: e => {\n            setGallons(e.target.value);\n            setSuggested(0);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your Address: \", data.addressOne]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Delivery Address: \", data.addressOne]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        size: \"lg\",\n        controlId: \"date\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Date (mm/dd/yyyy)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          autoFocus: true,\n          value: date,\n          onChange: e => setDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Suggested Price: \", suggested]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Due: \", total]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading data please wait\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"quote\",\n        block: true,\n        size: \"lg\",\n        disabled: !isNumber(gallons) || !isValidDate(date) || loading,\n        onClick: getQuote,\n        children: \"Get Quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"quote\",\n        block: true,\n        size: \"lg\",\n        type: \"submit\",\n        disabled: !isNumber(gallons) || !isValidDate(date) || suggested === 0,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Fuel, \"/GXXal7gFi+UzNZkK91pyEEozEU=\", false, function () {\n  return [useHistory];\n});\n\n_c = Fuel;\n\nvar _c;\n\n$RefreshReg$(_c, \"Fuel\");","map":{"version":3,"sources":["C:/Users/Eric/webAppClone/4353Project/src/Containers/Fuel.js"],"names":["React","useState","useEffect","Form","Button","useHistory","NavBar","axios","PricingModule","constructor","data","gallons","hasHistory","suggested","location","state","historyFactor","gal","fuelQuote","address","date","total","username","post","fuelInfo","then","response","localStorage","setItem","JSON","stringify","fuelHistory","Fuel","setGallons","setDate","setData","setHasHistory","setSuggested","setTotal","loading","setLoading","history","parse","getItem","addressOne","afunct","length","handleSubmit","event","alert","push","window","reload","getQuote","temp","toFixed","isNumber","n","test","isValidDate","dateString","parts","split","day","parseInt","month","year","monthLength","e","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\"\r\nimport Form from \"react-bootstrap/Form\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport NavBar from \"./NavBar\"\r\nimport axios from \"axios\"\r\nimport './Fuel.css'\r\n\r\nclass PricingModule {\r\n    constructor(data, gallons, hasHistory) {\r\n        this.data = data;\r\n        this.gallons = gallons;\r\n        this.hasHistory = hasHistory\r\n    }\r\n    suggested() {\r\n        var location = this.data.state === 'TX' ? .02 : .04;\r\n        var historyFactor = this.hasHistory === true ? .1 : 0;\r\n        var gal = this.gallons >= 1000 ? .02 : .03;\r\n        return (location - historyFactor + gal + .1) * 1.5;\r\n    }\r\n}\r\nfunction fuelQuote(gallons, address, date, suggested, total, username) {\r\n    return axios.post(\"http://localhost:8080/api/auth/fuelQuote\", {\r\n        gallons, address, date, suggested, total, username\r\n    });\r\n}\r\nfunction fuelInfo(username) {\r\n    return axios.post(\"http://localhost:8080/api/auth/fuelInfo\", {\r\n        username\r\n    }).then(response => {\r\n            localStorage.setItem(\"fuelInfo\", JSON.stringify(response.data.data))\r\n        return response.data\r\n    });\r\n}\r\nfunction fuelHistory(username){\r\n    return axios.post(\"http://localhost:8080/api/auth/gethistory\", {\r\n        username\r\n    })\r\n}\r\n\r\nexport default function Fuel(){\r\n    const [gallons, setGallons] = useState(\"\")\r\n    const [date, setDate] = useState(\"\")\r\n    const [data, setData] = useState([])\r\n    const [hasHistory, setHasHistory] = useState(false)\r\n    const [suggested, setSuggested] = useState(0)\r\n    const [total, setTotal] = useState(0)\r\n    const [loading, setLoading] = useState(true)\r\n    var history = useHistory();\r\n    var username = JSON.parse(localStorage.getItem('user')).username\r\n    \r\n    useEffect(() => {\r\n        setData({addressOne: \"Loading address..\"})\r\n        const afunct = async() =>{\r\n            await fuelInfo(username).then(() => {\r\n                setData(JSON.parse(localStorage.getItem(\"fuelInfo\")))\r\n            });\r\n            await fuelHistory(username).then(response => {\r\n                if(response.data.data.length !== 0)\r\n                    setHasHistory(true)\r\n                \r\n            })   \r\n            setLoading(false)  \r\n        }\r\n        afunct();\r\n    },[]);\r\n\r\n    function handleSubmit(event) {\r\n        fuelQuote(gallons, data.address, date, suggested, total, username)\r\n        alert(\"Quote Made\")\r\n        history.push(\"/History\")\r\n        window.location.reload();\r\n    }\r\n    async function getQuote(event){ \r\n        let temp = new PricingModule(data, gallons, hasHistory).suggested()\r\n\r\n        setSuggested(1.5 + temp)\r\n        setTotal((gallons * (1.5 + temp)).toFixed(2))    //im not using suggested here bc for some reason it wasnt working\r\n    }\r\n    function isNumber(n) { return /^-?[\\d.]+(?:e-?\\d+)?$/.test(n); } \r\n    function isValidDate(dateString) {\r\n        // First check for the pattern\r\n        if (!/^\\d{1,2}\\/\\d{1,2}\\/\\d{4}$/.test(dateString))\r\n            return false;\r\n\r\n        // Parse the date parts to integers\r\n        var parts = dateString.split(\"/\");\r\n        var day = parseInt(parts[1], 10);\r\n        var month = parseInt(parts[0], 10);\r\n        var year = parseInt(parts[2], 10);\r\n\r\n        // Check the ranges of month and year\r\n        if (year < 1000 || year > 3000 || month == 0 || month > 12)\r\n            return false;\r\n\r\n        var monthLength = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n\r\n        // Adjust for leap years\r\n        if (year % 400 == 0 || (year % 100 != 0 && year % 4 == 0))\r\n            monthLength[1] = 29;\r\n\r\n        // Check the range of the day\r\n        return day > 0 && day <= monthLength[month - 1];\r\n    };\r\n    return (\r\n        <div className=\"Fuel\">\r\n            <NavBar/>\r\n            <h1>Quote Page</h1>\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Group size=\"lg\" controlId=\"gallons\">\r\n                    <Form.Label>Gallons</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        autoFocus\r\n                        value={gallons}\r\n                        onChange={(e) => {setGallons(e.target.value); setSuggested(0)}}\r\n                    />\r\n                </Form.Group>\r\n                <p>Your Address: {data.addressOne}</p>\r\n                <p>Delivery Address: {data.addressOne}</p>\r\n                    <Form.Group size=\"lg\" controlId=\"date\">\r\n                        <Form.Label>Date (mm/dd/yyyy)</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            autoFocus\r\n                            value={date}\r\n                            onChange={(e) => setDate(e.target.value)}\r\n                        />\r\n                </Form.Group>\r\n                <p>Suggested Price: {suggested}</p>\r\n                <p>Total Due: {total}</p>\r\n                {loading && <p>Loading data please wait</p>}\r\n                <Button className=\"quote\" block size=\"lg\" disabled={!isNumber(gallons) || !isValidDate(date) || loading} onClick={getQuote}>\r\n                    Get Quote\r\n                </Button>\r\n                <Button className=\"quote\" block size=\"lg\" type=\"submit\" disabled={!isNumber(gallons) || !isValidDate(date) || suggested === 0}>\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}